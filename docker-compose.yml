services:
  # PostgreSQL Database
  db:
    container_name: notes_db
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}"
    networks:
      - notes_network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  # NestJS Backend API
  backend:
    container_name: notes_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - PORT=${BACKEND_PORT}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      - notes_network
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    restart: unless-stopped
  # React Frontend
  frontend:
    container_name: notes_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=${VITE_API_URL}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    networks:
      - notes_network
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    restart: unless-stopped

# Network definition allows containers to communicate with each other.
networks:
  notes_network:
    driver: bridge

# Volume definition ensures database data persists between container restarts.
volumes:
  postgres_data:
    driver: local